// C√°c routes trong ·ª©ng d·ª•ng
export const ROUTES = {
	HOME: '/',
	MINT_NFT: '/mint-nft',
	MARKETPLACE: '/marketplace',
	THE_GRAPH: '/the-graph',
	DASHBOARD: '/dashboard',
	REWARDS: '/rewards',
	RARITY: '/rarity',
	PRICING: '/pricing',
} as const;

// Debug env variables
console.log('üîç Environment Variables Debug:');
console.log('VITE_MARKETPLACE_ADDRESS:', import.meta.env.VITE_MARKETPLACE_ADDRESS);
console.log('VITE_AUTOMATED_REWARDS_ADDRESS:', import.meta.env.VITE_AUTOMATED_REWARDS_ADDRESS);
console.log('VITE_DYNAMIC_PRICING_ADDRESS:', import.meta.env.VITE_DYNAMIC_PRICING_ADDRESS);
console.log('VITE_RARITY_VERIFICATION_ADDRESS:', import.meta.env.VITE_RARITY_VERIFICATION_ADDRESS);

// Contract Addresses - v·ªõi fallback values
export const CONTRACT_ADDRESSES = {
	MARKETPLACE: import.meta.env.VITE_MARKETPLACE_ADDRESS || '0x1234567890123456789012345678901234567890',
	NFT_COLLECTION: import.meta.env.VITE_NFT_COLLECTION_ADDRESS || '0x2345678901234567890123456789012345678901',
	DYNAMIC_PRICING: import.meta.env.VITE_DYNAMIC_PRICING_ADDRESS || '0x4567890123456789012345678901234567890123',
	AUTOMATED_REWARDS: import.meta.env.VITE_AUTOMATED_REWARDS_ADDRESS || '0x5678901234567890123456789012345678901234',
	RARITY_VERIFICATION: import.meta.env.VITE_RARITY_VERIFICATION_ADDRESS || '0x6789012345678901234567890123456789012345',
	REWARD_TOKEN: import.meta.env.VITE_REWARD_TOKEN_ADDRESS || '0x3456789012345678901234567890123456789012',
} as const;

// Log contract addresses
console.log('üì¶ Contract Addresses Loaded:');
Object.entries(CONTRACT_ADDRESSES).forEach(([key, value]) => {
	const isDefault = value?.startsWith('0x123') || value?.startsWith('0x234') ||
		value?.startsWith('0x345') || value?.startsWith('0x456') ||
		value?.startsWith('0x567') || value?.startsWith('0x678');
	console.log(`${key}:`, value, isDefault ? '(default/fallback)' : '(from env)');
});

// C√°c message th√¥ng b√°o
export const MESSAGES = {
	CONNECT_WALLET: 'Vui l√≤ng k·∫øt n·ªëi v√≠!',
	UPLOAD_IMAGE: 'Vui l√≤ng upload ·∫£nh!',
	INVALID_PRICE: 'Gi√° kh√¥ng h·ª£p l·ªá!',
	MINT_SUCCESS: 'Mint NFT th√†nh c√¥ng üéâ',
	MINT_FAILED: 'Mint th·∫•t b·∫°i: ',
	LIST_SUCCESS: 'Li·ªát k√™ NFT th√†nh c√¥ng üéâ',
	LIST_FAILED: 'L·ªói khi li·ªát k√™ NFT: ',
	BUY_SUCCESS: 'Mua NFT th√†nh c√¥ng üéâ',
	BUY_FAILED: 'L·ªói khi mua NFT: ',
	LOAD_FAILED: 'L·ªói khi t·∫£i NFT: ',
	RARITY_REQUEST_SUCCESS: 'Y√™u c·∫ßu x√°c minh ƒë·ªô hi·∫øm th√†nh c√¥ng üé≠',
	RARITY_REQUEST_FAILED: 'L·ªói khi y√™u c·∫ßu x√°c minh ƒë·ªô hi·∫øm: ',
	REWARDS_CLAIM_SUCCESS: 'Nh·∫≠n rewards th√†nh c√¥ng üéÅ',
	REWARDS_CLAIM_FAILED: 'L·ªói khi nh·∫≠n rewards: ',
	FEE_PAYMENT_SUCCESS: 'Thanh to√°n ph√≠ th√†nh c√¥ng üí∞',
	FEE_PAYMENT_FAILED: 'L·ªói khi thanh to√°n ph√≠: ',
	PRICE_UPDATE_SUCCESS: 'C·∫≠p nh·∫≠t gi√° th√†nh c√¥ng üìä',
	PRICE_UPDATE_FAILED: 'L·ªói khi c·∫≠p nh·∫≠t gi√°: ',
	ENV_NOT_FOUND: '‚ö†Ô∏è File .env kh√¥ng t√¨m th·∫•y! ƒêang s·ª≠ d·ª•ng gi√° tr·ªã m·∫∑c ƒë·ªãnh.',
} as const;

// C√°c b∆∞·ªõc trong qu√° tr√¨nh mint
export const MINT_STEPS = {
	UPLOAD_IMAGE: 'ƒêang upload ·∫£nh l√™n IPFS...',
	UPLOAD_METADATA: 'ƒêang upload metadata l√™n IPFS...',
	MINTING: 'ƒêang mint NFT...',
	CONFIRMING: 'ƒêang ƒë·ª£i x√°c nh·∫≠n giao d·ªãch...',
	VERIFYING_RARITY: 'ƒêang x√°c minh ƒë·ªô hi·∫øm...',
} as const;

// C√°c rarity tiers
export const RARITY_TIERS = {
	COMMON: { name: 'Common', color: '#8c8c8c', minScore: 0, maxScore: 4999 },
	UNCOMMON: { name: 'Uncommon', color: '#52c41a', minScore: 5000, maxScore: 7499 },
	RARE: { name: 'Rare', color: '#1890ff', minScore: 7500, maxScore: 8999 },
	EPIC: { name: 'Epic', color: '#722ed1', minScore: 9000, maxScore: 9899 },
	LEGENDARY: { name: 'Legendary', color: '#fa8c16', minScore: 9900, maxScore: 9999 },
} as const;

// C√°c gi√° tr·ªã m·∫∑c ƒë·ªãnh
export const DEFAULT_VALUES = {
	IMAGE_HEIGHT: 240,
	CONTENT_MARGIN: 40,
	HEADER_HEIGHT: 150,
	REWARDS_INTERVAL: 7 * 24 * 60 * 60,
	FEE_PERCENTAGE: 2,
	TOP_USERS_COUNT: 5,
} as const;

// C√°c m√†u s·∫Øc
export const COLORS = {
	PRIMARY: '#1890ff',
	SUCCESS: '#52c41a',
	ERROR: '#f5222d',
	BORDER: '#bbb',
	WARNING: '#fa8c16',
	INFO: '#13c2c2',
} as const; 